ITERATION 2 PLAN
things to accomplish:
audio
camera
game
item
terrain
structure
one planet
resourceHandler




FULL PLAN
x create barebones game class with update and render functions
x create basic item class that just draws a blue square in its position
x make camera class that belongs to game that can pan around and zoom
x create table with a few placeholder item names and their sprites
x create resourceHandler that loads in this info
x draw outline around items when being hovered
x add planet class to store items
x add saving and loading of items (default directory is just items)
x add chunk class and get saving and loading of chunks working
x add structure base class
x create sprites for conveyor belt and add it
x make conveyors actually functional
- get saving and loading of structures working
- add few more structure types
- add actual build menu
- add terrain class with saving and loading
- create some terrain types
- add procedural generation to planet (xor shift random)
- make GUI fully functional
- flesh out all the items, structures, terrain
- finish tech tree and help menu
- add sound effects and audio (maybe)



possible optimisations:
calculate accurate hitboxes for items in resource handler
draw items using vertex array instead of sprites
chunks have a 2d array storing the index of the structure in every tile



CURRENT TODO
- conveyors need to check neighbouring conveyors to keep spacing
- when items on conveyors reach centre of conveyor, any excess should be used to move forward
- switch to a tick system (maybe have tickphase1, tickphase2, etc for different stages)
- move chunks into all chunks array
- implement active chunks thing in documentation
- make the drag item tool actually match the visuals (lowest y pos item should be selected)

theres gotta be a better way to do this whole conveyor system surely
idk ill do some pondering
anyway sleepy time



new idea:
have 4 list of items and just have progresses as floats
these are the items in each direction from the centre of the conveyor
